{"version":3,"file":"static/js/951.9437a56e.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/App.styled.js","views/ContactsView.js"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectFilter = state => state.contacts.filter;","// extracted by mini-css-extract-plugin\nexport default {\"div\":\"ContactForm_div__c--u9\",\"button\":\"ContactForm_button__eSwX9\",\"input\":\"ContactForm_input__Bl93P\"};","import { nanoid } from 'nanoid';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { Input } from '@chakra-ui/react';\nimport css from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  let dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n\n  const addNewContact = ({ name, phone }, setSubmitting, resetForm) => {\n    const newContact = {\n      id: nanoid(),\n      name,\n      number: phone,\n    };\n    if (\n      items\n        .map(item =>\n          item.name.toLowerCase().includes(newContact.name.toLowerCase())\n        )\n        .some(name => name === true)\n    ) {\n      alert(`${newContact.name} is already in contacts`);\n    } else {\n      dispatch(addContact(newContact));\n      setSubmitting(true);\n      resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', phone: '' }}\n      validate={values => {\n        const errors = {};\n        if (!values.name) {\n          errors.name = 'Required';\n        } else if (\n          !/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/i.test(\n            values.name\n          )\n        ) {\n          errors.name = 'Invalid Name';\n        }\n        if (!values.phone) {\n          errors.phone = 'Required';\n        } else if (\n          !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\n            values.phone\n          )\n        ) {\n          errors.phone = 'Invalid Phonenumber';\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        addNewContact(values, setSubmitting, resetForm);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <div className={css.div}>\n            <p>Name</p>\n            <Input\n              size=\"sm\"\n              type=\"text\"\n              name=\"name\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={handleChange}\n              value={values.name}\n              onBlur={handleBlur}\n              className={css.input}\n            />\n            {errors.name && touched.name && errors.name}\n          </div>\n\n          <div className={css.div}>\n            <p>Number</p>\n            <Input\n              size=\"sm\"\n              type=\"tel\"\n              name=\"phone\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={handleChange}\n              value={values.phone}\n              onBlur={handleBlur}\n              className={css.input}\n            />\n            {errors.phone && touched.phone && errors.phone}\n          </div>\n\n          <button className={css.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      )}\n    </Formik>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"div\":\"Filter_div__h0z7C\",\"input\":\"Filter_input__N7T3z\"};","import { setFilter } from 'redux/contactsSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Input } from '@chakra-ui/react';\nimport css from './Filter.module.css'\n\nconst Filter = () => {\n  let dispatch = useDispatch();\n\n  let filter = useSelector(state => state.filter);\n\n  function handleFilterChange(event) {\n    dispatch(setFilter(event.target.value));\n  }\n\n  return (\n    <div className={css.div}>\n      <Input\n        size=\"sm\"\n        type=\"text\"\n        name=\"name\"\n        onChange={handleFilterChange}\n        value={filter}\n        className={css.input}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"ContactList_ul__ppW9Q\",\"li\":\"ContactList_li__dzNT+\",\"button\":\"ContactList_button__7kL4l\",\"contact\":\"ContactList_contact__0STHS\"};","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport css from './ContactList.module.css';\n\nconst ContactList = ({ list }) => {\n  let dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul className={css.ul}>\n      {list.map(({ id, name, number }) => (\n        <li className={css.li} key={id}>\n          <p className={css.contact}>{name}</p>\n          <p className={css.contact}>{number}</p>\n          <button\n            className={css.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete contact\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 1.5em;\n  color: palevioletred;\n  margin-left: 15px;\n  margin-top: 15px;\n`;","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Title } from 'components/App.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectIsLoading,\n} from 'redux/selectors';\n\nexport default function ContactsView() {\n    const dispatch = useDispatch();\n\n  const items = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      {isLoading && <div>Loading....</div>}{' '}\n      {error ? (\n        <div>{error}</div>\n      ) : (\n        <ContactList\n          list={items.filter(user =>\n            user.name.toLowerCase().includes(filter.toLowerCase())\n          )}\n        />\n      )}\n    </div>\n  );\n}"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","name","phone","validate","values","errors","test","onSubmit","_ref2","_ref","setSubmitting","resetForm","newContact","id","nanoid","number","map","item","toLowerCase","includes","some","alert","concat","addContact","addNewContact","children","_ref3","touched","handleChange","handleBlur","handleSubmit","_jsxs","className","css","Input","size","type","title","required","onChange","value","onBlur","event","setFilter","target","list","onClick","deleteContact","onDeleteContact","Title","styled","_templateObject","_taggedTemplateLiteral","ContactsView","useEffect","fetchContacts","Filter","ContactList","user"],"sourceRoot":""}